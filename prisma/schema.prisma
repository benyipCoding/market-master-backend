// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Gender {
  Male
  Female
}

enum UserType {
  SuperUser
  Manager
  Premium
  Standard
  Anonymous
}

model User {
  id                String    @id @default(uuid())
  email             String    @unique
  password          String
  last_login        DateTime?
  is_superuser      Boolean   @default(false)
  first_name        String?
  last_name         String?
  is_staff          Boolean   @default(false)
  is_active         Boolean   @default(false)
  date_joined       DateTime?
  description       String?   @db.VarChar(255)
  update_at         DateTime  @updatedAt()
  create_at         DateTime  @default(now())
  username          String?   @unique
  mobile            String?   @unique
  avatar            String?
  display_name      String
  gender            Gender?
  user_type         UserType?
  login_error_count Int       @default(0)
  KLine             KLine[]
  profile           Profile?
}

model Profile {
  id          Int      @id @default(autoincrement())
  user_id     String   @unique
  user        User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  fav_sym_ids Int[]
  fav_syms    Symbol[]
}

model KLine {
  id         BigInt   @id
  symbol_id  Int
  symbol     Symbol   @relation(fields: [symbol_id], references: [id], onDelete: Cascade)
  period_id  Int
  period     Period   @relation(fields: [period_id], references: [id], onDelete: Cascade)
  timestamp  BigInt
  open       Decimal  @db.Decimal(20, 10)
  high       Decimal  @db.Decimal(20, 10)
  low        Decimal  @db.Decimal(20, 10)
  close      Decimal  @db.Decimal(20, 10)
  volume     Int?
  precision  Int
  creator_id String
  creator    User     @relation(fields: [creator_id], references: [id], onDelete: SetDefault)
  create_at  DateTime @default(now())

  @@unique([symbol_id, period_id, timestamp])
  @@index([symbol_id, period_id, timestamp], name: "SymbolPeriodTimestampIndex")
  @@index([symbol_id, period_id], name: "SymbolPeriodIndex")
  @@index([symbol_id], name: "SymbolIndex")
  @@index([timestamp], name: "TimestampIndex")
}

model SymbolCategory {
  id        Int              @id @default(autoincrement())
  name      String           @unique
  sort      Int?
  symbols   Symbol[]
  parent_id Int?
  parent    SymbolCategory?  @relation("parent", fields: [parent_id], references: [id])
  children  SymbolCategory[] @relation("parent")
}

model Period {
  id     Int     @id @default(autoincrement())
  label  String  @unique
  sort   Int?
  KLines KLine[]
}

model Symbol {
  id                Int            @id @default(autoincrement())
  label             String         @unique
  sort              Int?
  category_id       Int
  category          SymbolCategory @relation(fields: [category_id], references: [id], onDelete: SetDefault)
  KLines            KLine[]
  description       String?
  icon              String?
  basic_point_place Int? // 小数点后的第 X 位是基本点
  profiles          Profile[]
  precision         Int?
  minMove           Float?
}
